HOTEL RESERVATIONS PREDICTION
	Can you predict if the customer is going to honour the reservation or cancel it?

Target Audience is Hotels

Use Case
1] Revenue Management
	lets consider Taj hotel
	A509 Room No. is Overbooking
	Arun cancel the Room 
	we will pre book  to Rahul 
	So it will help to get the loss on the room 
2] Targeted Marketing
	lets consider Taj hotel
	A509 Room No. is Overbooking
	if this Arun booked the room if he is canceling the hotel room 
	so we will give him personalized offer  (free food,...lust full offer) attract to hote
3] Fraud Detection
	lets consider Taj hotel
	there are 2,3 people {Arun, Anuj, JAy...)} Booking the hotel room and cancel soon before there handling 
	we will ban also using fraud Detection.

use the Data which present on the Kaggle 
	Hotel Reservations Dataset 

Workflo of the Mlops Project

DATABASE SETUP --> PROJECT SETUP --> DATA INGESTION --> JUPYTER NOTEBOOK TESTING --> DATA PROCESSING --> MODEL TRAINING--> 
gcp bucket                   Project Structure         Project Directory        Rough  Road map of your project
				        Splitting and all 

EXPERIMENT TRACKING --> TRAINING PIPELINE   -->   DATA VERSIONING   --> CODE VERSIONING --> USER APP BUILDING --> CI-CD DEPLOYMENT --> DONE 
merge the MT and DP for      instead of running all        github and DVC                  GITHUB                        Flask,html,chatgpt          Jenkins or circleCI                                                   
Tracking use mlflow              files we will merge all        small data , big data                                                                                        Docker , GCR 
                                           files and run this training 
		              pipeline code.

**DataBase Setup with GCP Buckets**
1] GCP Google Cloud Platform Provide 
Database/ Storage
Virtual MAchine 
servers

2] GCP Buckets
	Storage serrvice
	Group of folder & files.

GCP Logging
got to bucket(storage bucket)
create bucket
	my_bucket5432
	.
	.
	Prevent Public access (untick it)
	.
	create
_______________________________________________________________________
_______________________________________________________________________

open it
now upload the csv file ( and rename it as hotel_reservations.csv )
_________________________________________________________________________________________________________________________________

3] Project Setup
	1) Create a venv (virtual environment)
	2] Requirement file
	3] setup.py --> project management
	4] logger (for track a process)
	5] Custom exception
	6] src directories (main components in src folder like data ingestion, data transformation, model training, pipelines,etc)
		artifacts folder (store the train and test file in artifacts folder)
		pipeline
		notebook
		config
		utils
		templates (use to store html files)
		static(Javascript,css files)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4] Data Ingestion with GCP
GCP Bucket--------------------------------extract--------------------------------------VS Code
                                                         Splitting ---------->Train and test

1) Service Account
	Restricted Access of your google cloud service
	Download Google cloud cli on pc
\	gcloud --version on terminal

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5] Jupyter Notebook Testing 




--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6] Data Processing



--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7] Model Training and Experiment Tracking using MLFLOW



-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8] Training Pipeline and Data & Code Versioning


	for code versioning download git cli click first link

Data Versioning
	project pc			Github repo
	
	data-> 500 rows	push	data = 500 rows
	change some code	push	no X Data= 500 rows
	data-> 1000 rows    push	data = 1000 rows
	
1. Code Versioning (Tracking Code Changes)
	Think of it like "Google Docs for Code."
	It tracks changes in the source code over time.
	Allows multiple people to work on the same project without messing up each other's work.
	Helps you revert to previous versions if something breaks.

	Example tools: Git, GitHub, GitLab, Bitbucket

	ðŸ”¹ Example:
	You write a Python script (model.py) and save different versions:
	V1: Basic model
	V2: Added data preprocessing
	V3: Improved accuracy with feature engineering With Git, you can switch between these versions anytime.

2. Data Versioning (Tracking Data Changes)
	Similar to code versioning, but for datasets instead of code.
	Tracks changes in data over time, such as updates, corrections, or new data points.
	Ensures reproducibilityâ€”so the same dataset can be used for future experiments.
	
	Example tools: DVC (Data Version Control), Delta Lake, Pachyderm, LakeFS

	ðŸ”¹ Example:
	You train a machine learning model on different versions of a dataset:
	V1: 10,000 records
	V2: 20,000 records (added new data)
	V3: 20,000 records (removed duplicates)
	Data versioning lets you track these changes and use the correct dataset when needed.	

				Key Differences

	Feature			Code Versioning			Data Versioning
	Tracks			Source Code			Datasets
	Tools			Git, GitHub, GitLab			DVC, Delta Lake, LakeFS
	Purpose			Maintain code history		Maintain data history
	Reproducibility		Ensures correct version of the code	Ensures correct version of data

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9] User App Building using Flask and Chatgpt


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10] CI-CD Deployment using Jenkins and Google Cloud Run
	CI-CD
	- Continues Integration and Continues Deployment
	
Project-----------------------------> Github -------------------------------->Google Cloud
	Integrated		Deployed				Jenkins

1] Setup Jenkins Container  
	(D in D :- Docker in Docker)
2] Github Integration

3] Dockerization of Project

4] Create a venv in your Jenkins

5] Build Docker Image of your Project --> Push to GCR (Google Cloud Registry)

6] Extract image from GCR --> push to Google Cloud Run

	App is Deployed
	      Done..........

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 




